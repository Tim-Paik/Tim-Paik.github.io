<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>诈尸————</title>
      <link href="/2020/05/04/%E8%AF%88%E5%B0%B8%E2%80%94%E2%80%94%E2%80%94%E2%80%94/"/>
      <url>/2020/05/04/%E8%AF%88%E5%B0%B8%E2%80%94%E2%80%94%E2%80%94%E2%80%94/</url>
      
        <content type="html"><![CDATA[<p>emmmm</p><p>好久不见！</p><a id="more"></a><p>没错！我们开学<del>一周</del>了！<br>事实上早在 4.25 就已经开始了苦难的学校生活（突然好想念钉钉那时<del>能躺在床上边睡觉边听课</del>的日子啊）</p><p>然而这并不能停止我 “学习” 的脚步——<br>事实上自从上篇博客以来（好久好久了吧），我也鼓捣了不少东西：</p><ul><li>安装了自己的第一台<code>Arch</code>！（现在当做服务器用）</li><li>学习了一些<strong>特别高深</strong>的<code>Nginx</code>配置——（好麻烦啊）</li><li>买了自己的第一个域名（免费的XD）</li><li>把这个<a href="https://timpaik.ga/" target="_blank" rel="noopener">blog</a>搬到了这个服务器和域名上！</li><li>把我的<code>Avgplus</code>搬到了这个服务器——（然鹅还因为没有素材而咕咕咕</li><li>建了自己的下载站！（暂不开放</li><li>建了自己的<code>webdav</code>网盘！（暂不开放</li><li>开坑了某*管理器项目！</li><li>为了上面的项目开始学习<code>Golang</code></li><li>为了学习<code>Golang</code>自己搭建了一个中文教程镜像——<a href="https://go.timpaik.ga/" target="_blank" rel="noopener">链接</a></li><li>为了搞上面的镜像学了学用<code>vuepress</code>做文档（其实是摸鱼（x</li><li>之前说的electron有些进展了——无边框窗口超级好看（大雾）以及刚刚实现无边框窗口的关闭</li></ul><p>这么一看貌似东西也不少。。？</p><p>想让我先更新哪篇文章就直接在下面评论就好XD</p>]]></content>
      
      
      
        <tags>
            
            <tag> 人生第一次 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>开学</title>
      <link href="/2020/05/04/%E5%BC%80%E5%AD%A6/"/>
      <url>/2020/05/04/%E5%BC%80%E5%AD%A6/</url>
      
        <content type="html"><![CDATA[<p>开！学！了！</p><a id="more"></a><p><img src="/images/ending.png" alt="开学"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>酸碱盐化学笔记</title>
      <link href="/2020/03/27/%E9%85%B8%E7%A2%B1%E7%9B%90%E5%8C%96%E5%AD%A6%E7%AC%94%E8%AE%B0/"/>
      <url>/2020/03/27/%E9%85%B8%E7%A2%B1%E7%9B%90%E5%8C%96%E5%AD%A6%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>Ps：酸碱盐真让人头疼</p><h2 id="酸碱盐综合"><a href="#酸碱盐综合" class="headerlink" title="酸碱盐综合"></a>酸碱盐综合</h2><h3 id="酸、碱、盐的性质"><a href="#酸、碱、盐的性质" class="headerlink" title="酸、碱、盐的性质"></a>酸、碱、盐的性质</h3><a id="more"></a><h4 id="一、酸、碱、盐的概念以及它们的本质区别"><a href="#一、酸、碱、盐的概念以及它们的本质区别" class="headerlink" title="一、酸、碱、盐的概念以及它们的本质区别"></a>一、酸、碱、盐的概念以及它们的本质区别</h4><h5 id="1-酸及酸的通性"><a href="#1-酸及酸的通性" class="headerlink" title="1. 酸及酸的通性"></a>1. 酸及酸的通性</h5><p>酸的定义：酸电离时生成的阳离子全部都是 <code>H+</code> 。要特别注意的是 <code>阳离子</code> 、 <code>全部</code> 、 <code>H+</code> 几个关键字必须全部具备。<br>酸的通性：盐酸、硫酸<br>酸使紫色石蕊试液变红，使无色酚酞试液不变色<br><code>金属+酸→盐+氢气</code> <code>Zn+2HCl=ZnCl₂+H₂↑</code> <code>Zn+H₂SO₄=ZnSO₄+H₂↑</code><br><code>金属氧化物+酸→盐+水</code> <code>Fe₂O₃+6HCl=2FeCl₃+3H₂O</code> <code>Fe₂O₃+3H₂SO₄=Fe₂(SO₄)₃+3H₂O</code><br><code>碱+酸→盐+水</code> <code>NaOH+HCl=NaCl+H₂O</code> <code>Cu(OH)₂+H₂SO₄=CuSO₄+2H₂O</code><br><code>盐+酸→另一种盐+另一种酸</code> <code>AgNO₃+HCl=AgCl↓+HNO₃</code> <code>BaCl₂+H₂SO₄=BaSO₄↓+2HCl</code> </p><h6 id="注意："><a href="#注意：" class="headerlink" title="注意："></a>注意：</h6><p>(1)在 <code>金属+酸→盐+氢气</code> 中，酸通常指的是稀硫酸和稀盐酸，不能是浓硫酸或硝酸。因为浓硫酸或硝酸都有强氧化性，与金属反应时不能生成氢气而生成了水；金属是指在金属活动顺序表中排在 <code>(H)</code> 前面的比氢活泼的金属，金属活动性顺序表中排在氢后的金属不能置换出酸中的氢。<br>(2)通过金属跟酸的反应情况导出金属活动顺序表：</p><figure class="hljs highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs plain">K Ca Na Mg Al Zn Fe Sn Pb (H) Cu Hg Ag Pt Au<br>╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍&gt;&gt;<br>            金属活动性由强逐渐减弱<br></code></pre></td></tr></table></figure><p>金属活动性顺序中，金属位置越靠前越活泼，反应越剧烈，所需时间越短<br>(3)浓硫酸具有吸水性，通常用它作为干燥剂。硫酸还具有脱水性，它对皮肤或衣服有很强的腐蚀性。稀释浓硫酸时<strong>一定</strong>要把浓硫酸<strong>沿着器壁</strong>慢慢地注入水里，并不断搅动。</p><blockquote><p>千万不可把水倒进浓硫酸里，如果把水注入浓硫酸里，水的密度较小，会浮在硫酸上面，溶解时放出的热会使水立刻沸腾！使硫酸液向四处飞溅，容易发生事故！</p></blockquote><h5 id="2-碱及碱的通性"><a href="#2-碱及碱的通性" class="headerlink" title="2. 碱及碱的通性"></a>2. 碱及碱的通性</h5><p>碱的定义：电离时生成的阴离子全部是 <code>OH⁻</code> 离子。也要特别注意的是 <code>阴离子</code> 、 <code>全部</code> 、 <code>OH⁻</code> 几个关键字同样必须全部具备。<br>常见的碱及碱的通性<br>碱的通性：氢氧化钠、氢氧化钙<br>碱使紫色石蕊试液变蓝，使无色酚酞试液变红<br><code>酸性氧化物+碱→盐+水</code> <code>2NaOH+CO₂=Na2CO₃+H₂O</code> <code>Ca(OH)₂+CO₂=CaCO₃↓+H₂O</code><br><code>酸+碱→盐+水</code> <code>NaOH+HCl=NaCl+H₂O</code> <code>Ca(OH)₂+H₂SO₄=CaSO₄+2H₂O</code><br><code>盐+碱→另一种盐+另一种碱</code> <code>2NaOH+CuSO₄=Na2SO₄+Cu(OH)₂↓</code> <code>Ca(OH)₂+Na2CO₃=CaCO₃↓+2NaOH</code> </p><h6 id="注意：-1"><a href="#注意：-1" class="headerlink" title="注意："></a>注意：</h6><p>(1)只有可溶性碱才能跟一些非金属氧化物发生反应，这些非金属氧化物是酸性氧化物。酸性氧化物多数能溶于水，跟水化合生成酸<br>(2)盐和碱反应时，必须两者都是可溶的，且生成物之一是沉淀，反应才能进行<br>(3)书写碱跟某些金属氧化物反应的化学方程式</p><blockquote><p>这类反应化学方程式的书写有些困难，可先写出非金属氧化物跟水反应，生成含氧酸的化学方程式，再以含氧酸和碱相互交换成分写出生成物两式合并成一个化学方程式.如，三氧化硫跟氢氧化钠反应。</p></blockquote><h5 id="3-盐及盐的性质"><a href="#3-盐及盐的性质" class="headerlink" title="3. 盐及盐的性质"></a>3. 盐及盐的性质</h5><p>对于盐的概念，我们可以这样认为：即酸碱电离后离子交换生成了盐和水。比如，我们把 <code>NaCl</code> 看作是 <code>HCl</code> 和 <code>NaOH</code> 电离后的产物，或者更通俗些，金属(铵根)开头酸根结尾。<br>常见的盐及盐的化学性质<br>盐的性质、实例<br><code>盐溶液+金属→盐+金属</code> <code>CuSO₄+Zn=ZnSO₄+Cu</code><br><code>盐+酸→盐+酸</code> <code>BaCl₂+H₂SO₄=BaSO₄↓+2HCl</code><br><code>盐溶液+碱溶液→盐+碱</code> <code>3NaOH+FeCl₃=3NaCl+Fe(OH)₃↓</code><br><code>盐溶液+盐溶液→盐+盐</code> <code>AgNO₃+NaCl=AgCl↓+NaNO₃</code><br>注意：<br>在金属活动顺序表中，只有排在前面的金属才能把排在后面的金属从它们的盐溶液中置换出来。但K、Ca、Na三种金属与盐溶液的反应特殊，会和水先反应</p><h4 id="二、明确复分解反应发生的本质，掌握酸碱盐反应的规律"><a href="#二、明确复分解反应发生的本质，掌握酸碱盐反应的规律" class="headerlink" title="二、明确复分解反应发生的本质，掌握酸碱盐反应的规律"></a>二、明确复分解反应发生的本质，掌握酸碱盐反应的规律</h4><h5 id="1-复分解反应及其发生的条件"><a href="#1-复分解反应及其发生的条件" class="headerlink" title="1. 复分解反应及其发生的条件"></a>1. 复分解反应及其发生的条件</h5><p>复分解反应的定义是：由两种化合物相互交换成分，生成另外两种化合物的反应<br>通式：AB+CD=AD+CB<br>发生的条件：两种物质在溶液中相互交换离子，生成物中如果有沉淀析出、气体放出或有水生成，复分解反应均可以发生</p><h5 id="2-运用复分解反应发生的条件，正确书写化学方程式"><a href="#2-运用复分解反应发生的条件，正确书写化学方程式" class="headerlink" title="2. 运用复分解反应发生的条件，正确书写化学方程式"></a>2. 运用复分解反应发生的条件，正确书写化学方程式</h5><p>记住酸、碱通性和盐的性质，并在学习酸的通性和碱的通性时，反复练习书写有关化学方程式，自学书后附录Ⅲ部分酸、碱和盐的溶解性表，从中找出溶与不溶的规律，再多练习书写有关反应的化学方程式，边写边巩固复分解反应条件。复分解反应的化学方程式是有规律可循的。</p><h5 id="3-碱与酸性氧化物反应不属于复分解反应"><a href="#3-碱与酸性氧化物反应不属于复分解反应" class="headerlink" title="3. 碱与酸性氧化物反应不属于复分解反应"></a>3. 碱与酸性氧化物反应不属于复分解反应</h5><h4 id="三、熟记酸、碱、盐的溶解性"><a href="#三、熟记酸、碱、盐的溶解性" class="headerlink" title="三、熟记酸、碱、盐的溶解性"></a>三、熟记酸、碱、盐的溶解性</h4><p>酸、碱、盐的溶解性是判断复分解反应能否发生的一个重要依据，这里有一个记忆口诀：</p><figure class="hljs highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs plain">全溶钾钠硝酸盐，另外还有铵的盐<br>盐酸难溶银的盐，其余全溶水中间<br>硫酸难溶钡的盐，微溶只有钙和银<br>碳酸溶有钾钠铵，微溶只有镁的盐（Al&#x2F;Fe&#x2F;Cu不存在）<br>碱溶钾钠钡和铵，Ca(OH)₂微溶性<br>酸类全溶水中间，Ag(OH)不存在<br></code></pre></td></tr></table></figure><h4 id="四、几个常见离子的检验"><a href="#四、几个常见离子的检验" class="headerlink" title="四、几个常见离子的检验"></a>四、几个常见离子的检验</h4><table><thead><tr><th align="center">实验操作</th><th align="center">实验现象</th><th align="center">实验结论</th><th align="center">化学方程式</th></tr></thead><tbody><tr><td align="center">取少量样品于试管中，滴加AgNO₃溶液和稀HNO₃</td><td align="center">有不溶于稀硝酸的白色沉淀生成</td><td align="center">样品含有<code>Cl⁻</code></td><td align="center"><code>AgNO₃+KCl=AgCl↓+KNO₃</code></td></tr><tr><td align="center">取少量样品于试管中，滴加Ba(NO₃)₂溶液和稀HNO₃</td><td align="center">有不溶于稀硝酸的白色沉淀生成</td><td align="center">样品含有<code>SO₄²⁻</code></td><td align="center"><code>Ba(NO₃)₂+H₂SO₄=BaSO₄↓+2HNO₃</code></td></tr><tr><td align="center">取少量样品于试管中，滴加稀HCl溶液，将生成的气体通入澄清石灰水</td><td align="center">有无色气体生成，该气体使澄清石灰水变浑浊</td><td align="center">样品含有<code>CO₃²⁻</code></td><td align="center"><code>K2CO₃+2HCl=2KCl+CO₂↑+H₂O</code></td></tr><tr><td align="center"><code>CO₂+Ca(OH)₂=CaCO₃↓+H₂O</code></td><td align="center"></td><td align="center"></td><td align="center"></td></tr></tbody></table><h3 id="酸碱盐知识归纳"><a href="#酸碱盐知识归纳" class="headerlink" title="酸碱盐知识归纳"></a>酸碱盐知识归纳</h3><h4 id="一、概念："><a href="#一、概念：" class="headerlink" title="一、概念："></a>一、概念：</h4><ol><li>酸的组成——氢离子+酸根离子</li><li>碱的组成——金属离子+氢氧根离子</li><li>盐的组成——金属离子+酸根离子</li><li>复分解反应——由两种化合物互相交换成分，生成另外两种化合物的反应，叫做复分解反应： <code>AB+CD=AD+CB</code> </li><li>稀释浓硫酸的方法——一定要把浓硫酸沿着器壁慢慢地注入水里，并不断搅动，使产生的热量迅速地扩散，切不可把水倒入浓硫酸里</li><li>中和反应——酸跟碱作用生成盐和水的反应叫做中和反应</li></ol><h4 id="二、熟记常见元素和原子团的化合价口诀："><a href="#二、熟记常见元素和原子团的化合价口诀：" class="headerlink" title="二、熟记常见元素和原子团的化合价口诀："></a>二、熟记常见元素和原子团的化合价口诀：</h4><h5 id="元素化合价："><a href="#元素化合价：" class="headerlink" title="元素化合价："></a>元素化合价：</h5><figure class="hljs highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs plain">氢钠钾银正一价，钙镁钡锌正二价<br>氟氯负一氧负二，铜正一正二铝正三<br>铁二三，炭二四，硫六二四正负正<br></code></pre></td></tr></table></figure><h5 id="原子团化合价："><a href="#原子团化合价：" class="headerlink" title="原子团化合价："></a>原子团化合价：</h5><figure class="hljs highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs plain">一价铵根硝酸根，高锰酸根氢氧根，另外还有氯酸根<br>二价硫酸碳酸根，另外还有锰酸根<br>除了铵根均负价，负三价只有磷酸根<br></code></pre></td></tr></table></figure><blockquote><p>(正价)一氢钾钠银，二钙镁钡锌，三铝、四硅、五氮磷<br>(负价)负一价：氟、氯、溴、碘；负二价：氧和硫<br>(可变正价)：一二铜汞，二三铁，二四碳，四六硫<br>(原子团的化合价)<br>负一价：氢氧根(OH)，硝酸根(NO₃)，氯酸根(ClO₃)，高锰酸根(MnO₄)<br>负二价：硫酸根(SO₄)，碳酸根(CO₃)，亚硫酸根(SO₃)，锰酸根(MnO₄)<br>负三价：磷酸根(PO₄)<br>正一价：铵根(NH4)</p></blockquote><h4 id="三、反应方程式："><a href="#三、反应方程式：" class="headerlink" title="三、反应方程式："></a>三、反应方程式：</h4><h5 id="一-酸的性质："><a href="#一-酸的性质：" class="headerlink" title="(一)酸的性质："></a>(一)酸的性质：</h5><p>(1) 与指示剂反应 紫色石蕊试液变红色，无色酚酞试液不变色<br>(2) <code>酸+碱=盐+水</code><br>(3) <code>酸+某些金属氧化物=盐+水</code><br>(4) <code>酸+活泼金属=盐+氢</code><br>(5) <code>酸+盐=新盐+新酸</code> </p><ol><li>锌跟稀盐酸反应： <code>Zn+2HCl=ZnCl₂+H₂↑</code> 有气泡产生，锌粒逐渐减少</li><li>锌跟稀硫酸反应： <code>Zn+H₂SO₄=ZnSO₄+H₂↑</code> 有气泡产生，锌粒逐渐减少</li><li>铁跟稀盐酸反应： <code>Fe+2HCl=FeCl₂+H₂↑</code> 有气泡产生，铁逐渐减少，溶液变成浅绿色</li><li>铁跟稀硫酸反应： <code>Fe+H₂SO₄=FeSO₄+H₂↑</code> 有气泡产生，铁逐渐减少，溶液变成浅绿色</li><li>铁锈跟稀盐酸反应： <code>Fe₂O₃+6HCl=2FeCl₃+3H₂O</code> 红色铁锈逐渐消失，溶液变成浅绿色</li><li>铁锈跟稀硫酸反应： <code>Fe₂O₃+3H₂SO₄=Fe₂(SO₄)₃+3H₂O</code> 红色铁锈逐渐消失，溶液变成浅绿色</li><li>氧化铜跟稀盐酸反应： <code>CuO+2HCl=CuCl₂+H₂O</code> 黑色氧化铜逐渐消失，溶液变成蓝色</li><li>氧化铜跟稀硫酸反应： <code>CuO+H₂SO₄=CuSO₄+H₂O</code> 黑色氧化铜逐渐消失，溶液变成蓝色</li></ol><h5 id="二-碱的性质："><a href="#二-碱的性质：" class="headerlink" title="(二)碱的性质："></a>(二)碱的性质：</h5><p>(1)碱溶液能使紫色石蕊试液变蓝色，无色酚酞试液变红色<br>(2) <code>碱+多数非金属氧化物=盐+水</code><br>(3) <code>碱+酸=盐+水</code><br>(4) <code>碱+某些盐=另一种盐+另一种碱</code> </p><ol><li>氢氧化钠跟二氧化碳反应： <code>2NaOH+CO₂=Na2CO₃+H₂O</code> </li><li>氢氧化钠跟二氧化硫反应： <code>2NaOH+SO₂=Na2SO₃+H₂O</code> </li><li>氢氧化钠跟三氧化硫反应： <code>2NaOH+SO₃=Na2SO₄+H₂O</code> </li><li>氢氧化钙跟二氧化碳反应： <code>Ca(OH)₂+CO₂=CaCO₃↓+H₂O</code> <code>CaCO₃↓</code> 使澄清石灰水变浑浊</li><li>氢氧化钠跟稀硫酸反应： <code>2NaOH+H₂SO₄=Na2SO₄+2H₂O</code> </li><li>氢氧化钠跟稀盐酸反应： <code>NaOH+HCl=NaCl+H₂O</code> </li><li>生石灰跟水反应： <code>CaO+H₂O=Ca(OH)₂</code> </li></ol><h5 id="三-盐的性质："><a href="#三-盐的性质：" class="headerlink" title="(三)盐的性质："></a>(三)盐的性质：</h5><p>(1) <code>盐+某些金属=另一种盐+另一种金属</code><br>(2) <code>盐+某些酸=另一种盐+另一种酸</code><br>(3) <code>盐+某些碱=另一种盐+另一种碱</code><br>(4) <code>盐+某些盐=另一种盐+另一种盐</code> </p><ol><li>硫酸铜溶液跟铁反应： <code>CuSO₄+Fe=ZnSO₄+Fe</code> 铁表面覆盖红色物质，溶液由蓝色变浅绿色</li><li>碳酸钠跟盐酸反应： <code>Na2CO₃+2HCl=2NaCl+H₂O+CO₂↑</code> 有气泡产生固体逐渐减少</li><li>碳酸氢钠跟盐酸反应： <code>NaHCO₃+HCl=NaCl+H₂O+CO₂↑</code> 有气泡产生固体逐渐减少</li><li>石灰石跟稀盐酸反应： <code>CaCO₃+2HCl=CaCl₂+H₂O+CO₂↑</code> 有气泡产生固体逐渐减少</li><li>硝酸银跟稀盐酸反应： <code>AgNO₃+HCl=AgCl↓+HNO₃</code> 有白色沉淀产生</li><li>氯化钡跟稀硫酸反应： <code>BaCl₂+H₂SO₄=BaSO₄↓+2HCl</code> 有白色沉淀产生</li><li>氢氧化钙根碳酸钠溶液反应： <code>Ca(OH)₂+Na2CO₃=2NaOH+CaCO₃↓</code> 有白色沉淀产生</li><li>硝酸银溶液跟氢氧化钠溶液反应： <code>AgNO₃+NaCl=AgCl↓+NaNO₃</code> 有白色沉淀产生</li><li>氯化钡溶液跟硫酸钠溶液反应： <code>BaCl₂+Na2SO₄=2NaCl+BaSO₄↓</code> 有白色沉淀产生</li><li>氢氧化铜跟稀盐酸反应： <code>Cu(OH)₂+2HCl=CuCl₂+2H₂O</code> 蓝色沉淀消失</li><li>氢氧化铜跟稀硫酸反应： <code>Cu(OH)₂+H₂SO₄=CuSO₄+2H₂O</code> 变成蓝色溶液</li><li>氢氧化钠跟硫酸铜溶液反应： <code>2NaOH+CuSO₄=Na2SO₄+Cu(OH)₂↓</code> 有蓝色沉淀产生</li><li>氢氧化钠跟氯化铁溶液反应： <code>3NaOH+FeCl₃=Fe(OH)₃↓ +3NaCl</code> 有红褐色沉淀产生</li></ol><h4 id="四、金属活动性顺序表："><a href="#四、金属活动性顺序表：" class="headerlink" title="四、金属活动性顺序表："></a>四、金属活动性顺序表：</h4><figure class="hljs highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs plain">K Ca Na Mg Al Zn Fe Sn Pb (H) Cu Hg Ag Pt Au<br>╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍&gt;&gt;<br>╍╍╍╍╍╍╍╍╍╍╍╍金属活动性由强逐渐减弱╍╍╍╍╍╍╍╍╍╍╍╍<br></code></pre></td></tr></table></figure><h4 id="五、溶解性表："><a href="#五、溶解性表：" class="headerlink" title="五、溶解性表："></a>五、溶解性表：</h4><p>(1) 大多数酸可溶( <code>HCl</code> 、 <code>HNO₃</code> 、 <code>H₂CO₃</code> 有挥发性、浓 <code>H₂SO₄</code> 有吸水性)<br>(2) 碱的溶解性：钾、钠、钡、铵溶、钙微溶，其余碱 全不溶<br>(3) 盐的溶解性：</p><blockquote><p>钾、钠、铵、硝四盐溶<br>氯化物除 <code>AgCl</code> 不溶外，其余全溶<br>硫酸盐除 <code>BaSO₄</code> 不溶， <code>Ag2SO₄</code> 、 <code>CaSO₄</code> 微溶外，其余全溶<br>碳酸盐除钾、钠、铵盐全溶、 <code>MgCO₃</code> 微外，其余全不溶</p></blockquote><p>口诀：</p><figure class="hljs highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs plain">全溶钾钠硝酸盐，另外还有铵的盐<br>盐酸难溶银的盐，其余全溶水中间<br>硫酸难溶钡的盐，微溶只有钙和银<br>碳酸溶有钾钠铵，微溶只有镁的盐（Al&#x2F;Fe&#x2F;Cu不存在）<br>碱溶钾钠钡和铵，Ca(OH)₂微溶性<br>酸类全溶水中间，Ag(OH)不存在<br></code></pre></td></tr></table></figure><h4 id="六、反应条件："><a href="#六、反应条件：" class="headerlink" title="六、反应条件："></a>六、反应条件：</h4><ol><li>复分解反应的条件————生成物中有沉淀析出，或有气体放出，或有水生成</li><li>金属跟酸反应的条件————<blockquote><p>(1) 在金属活动性顺序表中，金属要排在氢前<br>(2) 浓硫酸、硝酸跟金属反应不能生成氢气<br>(3) 铁发生置换反应时，生成+2价的铁的化合物</p></blockquote></li><li>金属跟盐反应的条件————<blockquote><p>(1)在金属活动性顺序表中，单质的金属要比盐中金属活泼<br>(2)反应物中的盐要可溶<br>(3) <code>K</code> 、 <code>Ca</code> 、 <code>Na</code> 、 <code>Ba</code> 等金属跟盐反应不能生成另一种盐和另一种金属</p></blockquote></li><li>盐跟盐反应的条件————反应物都要可溶，生成物要有沉淀</li><li>盐跟碱反应的条件————反应物都要可溶，生成物要有沉淀或气体</li></ol><h4 id="七、熟记常见物质的俗称和化学式："><a href="#七、熟记常见物质的俗称和化学式：" class="headerlink" title="七、熟记常见物质的俗称和化学式："></a>七、熟记常见物质的俗称和化学式：</h4><blockquote><p>生石灰—— <code>CaO</code><br>熟石灰—— <code>Ca(OH)₂</code><br>石灰石、大理石—— <code>CaCO₃</code><br>食盐—— <code>NaCl</code><br>火碱、烧碱、苛性钠—— <code>NaOH</code><br>纯碱、苏打—— <code>Na₂CO₃</code><br>小苏打—— <code>NaHCO₃</code><br>铁锈、赤铁矿—— <code>Fe₂O₃</code><br>赤铁矿—— <code>Fe₃O₄</code><br>金刚石、石墨—— <code>C</code><br>干冰—— <code>CO₂</code><br>冰—— <code>H₂O</code><br>天然气(甲烷)—— <code>CH₄</code><br>酒精(乙醇)—— <code>C₂H₅OH</code><br>醋酸(乙酸)—— <code>CH₃COOH</code></p></blockquote><h4 id="八、熟记常见物质的颜色："><a href="#八、熟记常见物质的颜色：" class="headerlink" title="八、熟记常见物质的颜色："></a>八、熟记常见物质的颜色：</h4><p>红色的固体—— <code>Cu</code> 、 <code>Fe₂O₃</code> 、 <code>P</code> (红磷)<br>黑色的固体—— <code>C</code> 、 <code>CuO</code> 、 <code>Fe₃O₄</code> 、 <code>FeO</code> 、 <code>MnO₂</code><br>白色的固体—— <code>KClO₃</code> 、 <code>P2O5</code> 、 <code>P</code> (白磷)、 <code>CuSO₄</code> (无水硫酸铜)、 <code>KCl</code> 、 <code>NaCl</code> 等<br>暗紫色的固体—— <code>KMnO₄</code><br>黄色的固体—— <code>S</code><br>蓝色的固体—— <code>CuSO₄•5H₂O</code><br>蓝色絮状沉淀—— <code>Cu(OH)₂</code><br>红褐色絮状沉淀—— <code>Fe(OH)₃</code><br>常见不溶于酸的白色沉淀—— <code>BaSO₄</code> 、 <code>AgCl</code><br>溶于酸并放出使澄清石灰水变浑浊的气体的白色沉淀—— <code>BaCO₃</code> 、 <code>CaCO₃</code> 等不溶性碳酸盐的沉淀<br>溶于酸但不产生气体的白色沉淀—— <code>Mg(OH)₂</code> 、 <code>Al(OH)₃</code> 等不溶性碱的沉淀<br>蓝色的溶液—— <code>CuSO₄</code> 、 <code>CuCl₂</code> 、 <code>Cu(NO₃)₂</code> 等含 <code>Cu²⁺</code> 溶液<br>浅绿色的溶液—— <code>FeSO₄</code>、 <code>FeCl₂</code> 等含 <code>Fe²⁺</code> 溶液<br>黄色的溶液—— <code>FeCl₃</code> 、 <code>Fe₂(SO₄)₃</code> 、 <code>Fe(NO₃)₃</code> 等含 <code>Fe³⁺</code> 溶液</p><h4 id="九、物质的检验和鉴别："><a href="#九、物质的检验和鉴别：" class="headerlink" title="九、物质的检验和鉴别："></a>九、物质的检验和鉴别：</h4><ol><li>检验稀盐酸(或 <code>Cl⁻</code> )——取少量待检液体于洁净的试管中，滴入几滴 <code>AgNO₃</code> 溶液和稀 <code>HNO₃</code> ，有白色沉淀产生</li><li>检验稀硫酸(或 <code>SO₄²⁻</code> )——取少量待检液体于洁净的试管中，滴入几滴 <code>BaCl₂</code> 溶液和稀 <code>HNO₃</code> ，有白色沉淀产生</li><li>检验 <code>CO₃²⁻</code> ——取少量待检液体于洁净的试管中，滴入几滴稀 <code>HCl</code> ，有使澄清石灰水变浑浊的气体产生</li><li>检验 <code>NH4+</code> ——取少量待检物于洁净的试管中，滴入适量 <code>NaOH</code> 溶液并加热，有使湿的红色石蕊试纸变成蓝色的气体产生</li><li>鉴别稀盐酸和稀硫酸——分别取少量待检液体于两支洁净的试管中，各滴入几滴 <code>BaCl₂</code> 溶液，有白色沉淀产生的原溶液是稀硫酸，无现象产生的原溶液是稀盐酸</li><li>鉴别 <code>Ca(OH)₂</code> 和 <code>NaOH</code> 溶液——分别取少量待检液体于两支洁净的试管中，分别通入 <code>CO₂</code> 气体(或各滴入几滴 <code>Na2CO₃</code> 溶液)，有白色沉淀产生的原溶液是 <code>Ca(OH)₂</code> ，无现象产生的原溶液是 <code>NaOH</code> </li></ol><h4 id="判断溶液的酸碱性——用指示剂，溶液的酸碱度——用pH来表示"><a href="#判断溶液的酸碱性——用指示剂，溶液的酸碱度——用pH来表示" class="headerlink" title="判断溶液的酸碱性——用指示剂，溶液的酸碱度——用pH来表示"></a>判断溶液的酸碱性——用指示剂，溶液的酸碱度——用pH来表示</h4><figure class="hljs highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs plain">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14<br>&lt;╍╍酸性增强╍╍╍╍╍中性╍╍╍╍╍碱性增强╍╍&gt;<br></code></pre></td></tr></table></figure><p>指示剂：紫色石蕊、无色酚酞<br>酸使紫色石蕊试液变红，使无色酚酞试液不变色<br>碱使紫色石蕊试液变蓝，使无色酚酞试液变红</p><h4 id="干燥剂的选择："><a href="#干燥剂的选择：" class="headerlink" title="干燥剂的选择："></a>干燥剂的选择：</h4><ol><li>浓硫酸可干燥：酸性气体(如： <code>CO₂</code> 、 <code>SO₂</code> 、 <code>SO₃</code> 、 <code>NO₂</code> 、 <code>HCl</code> )与中性气体(如： <code>H₂</code> 、 <code>O₂</code> 、 <code>N₂</code> 、 <code>CO</code> )<blockquote><p>※不能干燥碱性气体(如： <code>NH3</code> )</p></blockquote></li><li>氢氧化钠固体、生石灰、碱石灰可干燥：碱性气体(如： <code>NH3</code> )与中性气体(如： <code>H₂</code> 、 <code>O₂</code> 、 <code>N₂</code> 、 <code>CO</code> )<blockquote><p>※不能干燥酸性气体(如： <code>CO₂</code> 、 <code>SO₂</code> 、 <code>SO₃</code> 、 <code>NO₂</code> 、 <code>HCl</code> )</p></blockquote></li><li>无水硫酸铜固体遇水由白色变蓝色，可检验水的存在，并吸收水蒸气</li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>说说一些近况——</title>
      <link href="/2020/03/25/%E8%AF%B4%E8%AF%B4%E4%B8%80%E4%BA%9B%E8%BF%91%E5%86%B5%E2%80%94%E2%80%94/"/>
      <url>/2020/03/25/%E8%AF%B4%E8%AF%B4%E4%B8%80%E4%BA%9B%E8%BF%91%E5%86%B5%E2%80%94%E2%80%94/</url>
      
        <content type="html"><![CDATA[<h4 id="一些近况"><a href="#一些近况" class="headerlink" title="一些近况"></a>一些近况</h4><p>好久没更新了呢——<br><del>(根本没人看好吧)</del></p><h5 id="最近看到了-electron-这个项目，感觉很不错！想学习一下"><a href="#最近看到了-electron-这个项目，感觉很不错！想学习一下" class="headerlink" title="最近看到了 electron 这个项目，感觉很不错！想学习一下"></a>最近看到了 electron 这个项目，感觉很不错！想学习一下</h5><a id="more"></a><p>然后！就莫名陷入了前端的坑（误）<br>基本的 HTML 已经学的差不多了，然后现在在啃 JavaScript，CSS 还在后面、</p><blockquote><p>PS：搞不懂 JavaScript aaaaaaa</p></blockquote><p>但由于学业繁重（毕竟初三了嘛），所以并不是有很多时间来学习 electron ~</p><p>最近很可能会减缓更新了（咕咕咕咕咕）</p><h4 id="然后是博客最近的改动："><a href="#然后是博客最近的改动：" class="headerlink" title="然后是博客最近的改动："></a>然后是博客最近的改动：</h4><ul><li>更改了我的头像！（终于不是一团黑了）</li><li>网站的图标换了——，but，大部分浏览器要清空缓存才能看见，就很头疼</li><li>把我的头像从原来恐怖的8192x8192(要整整8mb!)改成了比较小的分辨率（也没人会点开头像看8）</li><li>建立了另一个关于新冠病毒的页面，具体内容是<code>新冠肺炎防治手册</code>，从alibaba那里扒来的，以下是阿里巴巴的描述：<blockquote><p>为全力抗击新冠疫情，打赢这场必胜之战，国际交流合作势在必行。浙江大学医学院附属第一医院在过去的五十多天，收治了104名确诊患者，创造了“0死亡、0漏诊、0医护人员感染”的奇迹；一线医务工作者在与病魔抗争的同时夜以继日写下防控及临床救治经验，并迅速出版了这本《新冠肺炎防治手册》，希望给全球医务人员一些实用的建议和参考。这本手册在编写过程中对比分析了国内其他团队工作经验，针对患者分型救治原则及诊疗过程中可能发生的各类问题均提供了细致及全面的解答，为院感（医院感染管理）、临床、护理等重要部门提供良好工作借鉴，是一本凝聚了中国顶尖医学专家应对新冠肺炎的综合指南和最佳实践。</p></blockquote></li></ul><blockquote><p>国内链接(gitee) <a href="https://timpaik.gitee.io/covid-19/" target="_blank" rel="noopener">新冠肺炎防治手册(标准版)</a><br>国外链接(github) <a href="https://tim-paik.github.io/COVID-19/">Handbook of COVID-19 Prevention and Treatment (Standard)</a><br>吐槽一下github和gitee，链接大小写都不一样、<br>Ps:可能打开速度很慢很慢，因为这个网页加载的PDF有24mb！（完整版）<br>原文链接（原文的在线阅读是压缩版的很糊）：<a href="https://covid-19.alibabacloud.com/" target="_blank" rel="noopener">https://covid-19.alibabacloud.com/</a></p></blockquote><p>然后、<br>就没有然后了呗~<br>下次更新遥遥无期——</p>]]></content>
      
      
      
        <tags>
            
            <tag> 日常 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用HEXO搭建你自己的博客！（下）</title>
      <link href="/2020/03/11/%E7%94%A8HEXO%E6%90%AD%E5%BB%BA%E4%BD%A0%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%EF%BC%81%EF%BC%88%E4%B8%8B%EF%BC%89/"/>
      <url>/2020/03/11/%E7%94%A8HEXO%E6%90%AD%E5%BB%BA%E4%BD%A0%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%EF%BC%81%EF%BC%88%E4%B8%8B%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>前几天我搭建了我的博客！<br>现在我把搭建的过程记下来（顺便存个档防止健忘症en）<br>本文是使用Windows 10 LTSC作为平台搭建的，但Hexo完全跨平台，大部分命令通用（有些命令要加<code>sudo</code>哦）<br>PS:本项目无任何预算！全部是免费的XD</p><a id="more"></a><h4 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h4><p><a href="/2020/03/11/用HEXO搭建你自己的博客！（上）/">用HEXO搭建你自己的博客！（上）</a><br><a href="/2020/03/11/用HEXO搭建你自己的博客！（中）/">用HEXO搭建你自己的博客！（中）</a><br><a href="/2020/03/11/用HEXO搭建你自己的博客！（下）/">用HEXO搭建你自己的博客！（下）</a></p><h4 id="配置站点地图"><a href="#配置站点地图" class="headerlink" title="配置站点地图"></a>配置站点地图</h4><p>在你的hexo根目录下运行：</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install hexo-generator-sitemap --save-dev<br>npm install hexo-generator-baidu-sitemap --save-dev<br></code></pre></td></tr></table></figure><p>然后再到<strong>你站点的</strong><code>_config.yml</code>中添加：</p><figure class="hljs highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># 自动生成sitemap</span><br><span class="hljs-attr">sitemap:</span><br>  <span class="hljs-attr">path:</span> <span class="hljs-string">sitemap.xml</span><br><span class="hljs-attr">baidusitemap:</span><br>  <span class="hljs-attr">path:</span> <span class="hljs-string">baidusitemap.xml</span><br></code></pre></td></tr></table></figure><p>就基本完成了！</p><h4 id="安装自动发布工具"><a href="#安装自动发布工具" class="headerlink" title="安装自动发布工具"></a>安装自动发布工具</h4><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install hexo-deployer-git --save<br></code></pre></td></tr></table></figure><h4 id="写博客！"><a href="#写博客！" class="headerlink" title="写博客！"></a>写博客！</h4><p>接下来你需要在博客根目录运行以下命令来创建一篇新博客：</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo new <span class="hljs-string">"你的博客标题"</span><br></code></pre></td></tr></table></figure><p>然后你就可以运行<code>hexo s</code>来测试你的博客了！<br>直接访问:<a href="localhost:4000">localhost:4000</a>就可以！</p><h4 id="终于到了发布的环节了！"><a href="#终于到了发布的环节了！" class="headerlink" title="终于到了发布的环节了！"></a>终于到了发布的环节了！</h4><p>测试没问题之后，直接在博客根目录运行以下命令</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d<br></code></pre></td></tr></table></figure><p>如果是是第一次上传，你需要输入你的github(gitee)账号和密码，就能上传了！</p><h4 id="访问！"><a href="#访问！" class="headerlink" title="访问！"></a>访问！</h4><p>至此你的博客基本就做完了，打开你的博客地址可以看吧！<br>在浏览器里打开[username].github.io就能看到了！</p><h4 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h4><p>还有什么问题可以直接在评论区提！我会尽量回复的！<br>这里是Tim_Paik，如果有什么好想法或者求助可以找这个邮箱：timpaik#163.com（把#换成@）<br>转载请注明作者en</p><h4 id="留言"><a href="#留言" class="headerlink" title="留言"></a>留言</h4><p>还有什么问题可以直接在评论区提！我会尽量回复的！<br>这里是Tim_Paik，如果有什么好想法或者求助可以找这个邮箱：timpaik#163.com（把#换成@）<br>转载请注明作者en</p>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 博客 </tag>
            
            <tag> Blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用HEXO搭建你自己的博客！（中）</title>
      <link href="/2020/03/11/%E7%94%A8HEXO%E6%90%AD%E5%BB%BA%E4%BD%A0%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%EF%BC%81%EF%BC%88%E4%B8%AD%EF%BC%89/"/>
      <url>/2020/03/11/%E7%94%A8HEXO%E6%90%AD%E5%BB%BA%E4%BD%A0%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%EF%BC%81%EF%BC%88%E4%B8%AD%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>前几天我搭建了我的博客！<br>现在我把搭建的过程记下来（顺便存个档防止健忘症en）<br>本文是使用Windows 10 LTSC作为平台搭建的，但Hexo完全跨平台，大部分命令通用（有些命令要加<code>sudo</code>哦）<br>PS:本项目无任何预算！全部是免费的XD</p><a id="more"></a><h4 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h4><p><a href="/2020/03/11/用HEXO搭建你自己的博客！（上）/">用HEXO搭建你自己的博客！（上）</a><br><a href="/2020/03/11/用HEXO搭建你自己的博客！（中）/">用HEXO搭建你自己的博客！（中）</a><br><a href="/2020/03/11/用HEXO搭建你自己的博客！（下）/">用HEXO搭建你自己的博客！（下）</a></p><h5 id="安装主题！"><a href="#安装主题！" class="headerlink" title="安装主题！"></a>安装主题！</h5><p><strong>当前我其实不推荐没有接触过前端的同学安装本文所用的ARIA框架，网上基本没有相关教程，如果你看完了本文后还是不会，请转到<a href="https://github.com/theme-next/hexo-theme-next/blob/master/docs/zh-CN/README.md" target="_blank" rel="noopener">NexT</a>这个主题，百度一搜能找出一大堆教程——</strong></p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/AlynxZhou/hexo-theme-aria themes/aria<br></code></pre></td></tr></table></figure><h4 id="以下转载与ARIA的github仓库——"><a href="#以下转载与ARIA的github仓库——" class="headerlink" title="以下转载与ARIA的github仓库——"></a>以下转载与ARIA的github仓库——</h4><hr><h5 id="修改你站点的-config-yml"><a href="#修改你站点的-config-yml" class="headerlink" title="修改你站点的_config.yml"></a>修改<strong>你站点的</strong><code>_config.yml</code></h5><h6 id="把主题修改为-aria"><a href="#把主题修改为-aria" class="headerlink" title="把主题修改为 aria"></a>把主题修改为 <code>aria</code></h6> <figure class="hljs highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">theme:</span> <span class="hljs-string">aria</span><br></code></pre></td></tr></table></figure><h6 id="语言设置，可以设置的值为-zh-CN、zh-HK、zh-TW-或-en。如果你从别的主题转移过来比如旧版本-NexT，请注意这里不是-zh-Hans-而是-zh-CN。default-是-en-的别名。"><a href="#语言设置，可以设置的值为-zh-CN、zh-HK、zh-TW-或-en。如果你从别的主题转移过来比如旧版本-NexT，请注意这里不是-zh-Hans-而是-zh-CN。default-是-en-的别名。" class="headerlink" title="语言设置，可以设置的值为 zh_CN、zh_HK、zh_TW 或 en。如果你从别的主题转移过来比如旧版本 NexT，请注意这里不是 zh-Hans 而是 zh_CN。default 是 en 的别名。"></a>语言设置，可以设置的值为 <code>zh_CN</code>、<code>zh_HK</code>、<code>zh_TW</code> 或 <code>en</code>。如果你从别的主题转移过来比如旧版本 NexT，请注意这里不是 <code>zh-Hans</code> 而是 <code>zh_CN</code>。<code>default</code> 是 <code>en</code> 的别名。</h6><figure class="hljs highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">language:</span> <span class="hljs-string">zh_CN</span><br></code></pre></td></tr></table></figure><h6 id="Hexo-搜索插件的配置"><a href="#Hexo-搜索插件的配置" class="headerlink" title="Hexo 搜索插件的配置"></a>Hexo 搜索插件的配置</h6><figure class="hljs highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># Hexo local search</span><br><span class="hljs-attr">search:</span><br>  <span class="hljs-attr">path:</span> <span class="hljs-string">search.xml</span><br>  <span class="hljs-attr">field:</span> <span class="hljs-string">all</span><br></code></pre></td></tr></table></figure><h6 id="Hexo-RSS-插件的配置"><a href="#Hexo-RSS-插件的配置" class="headerlink" title="Hexo RSS 插件的配置"></a>Hexo RSS 插件的配置</h6><figure class="hljs highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># Hexo feed</span><br><span class="hljs-attr">feed:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">atom</span><br>  <span class="hljs-attr">path:</span> <span class="hljs-string">atom.xml</span><br>  <span class="hljs-attr">limit:</span> <span class="hljs-number">20</span><br>  <span class="hljs-attr">hub:</span><br>  <span class="hljs-attr">content:</span><br>  <span class="hljs-attr">content_limit:</span> <span class="hljs-number">140</span><br>  <span class="hljs-attr">content_limit_delim:</span> <span class="hljs-string">' '</span><br></code></pre></td></tr></table></figure><h6 id="高亮设置，Hexo-内置的语法高亮功能使用了-highlight-js，但默认却没有给高亮的类名添加-hljs-的前缀，而-highlight-js-项目提供的-CSS-文件却使用了这个前缀。为了保持和-highlight-js-项目-CSS-文件的兼容性，你需要像下面一样添加-hljs-true-到对应的配置里："><a href="#高亮设置，Hexo-内置的语法高亮功能使用了-highlight-js，但默认却没有给高亮的类名添加-hljs-的前缀，而-highlight-js-项目提供的-CSS-文件却使用了这个前缀。为了保持和-highlight-js-项目-CSS-文件的兼容性，你需要像下面一样添加-hljs-true-到对应的配置里：" class="headerlink" title="高亮设置，Hexo 内置的语法高亮功能使用了 highlight.js，但默认却没有给高亮的类名添加 hljs- 的前缀，而 highlight.js 项目提供的 CSS 文件却使用了这个前缀。为了保持和 highlight.js 项目 CSS 文件的兼容性，你需要像下面一样添加 hljs: true 到对应的配置里："></a>高亮设置，Hexo 内置的语法高亮功能使用了 highlight.js，但默认却没有给高亮的类名添加 <code>hljs-</code> 的前缀，而 highlight.js 项目提供的 CSS 文件却使用了这个前缀。为了保持和 highlight.js 项目 CSS 文件的兼容性，你需要像下面一样添加 <code>hljs: true</code> 到对应的配置里：</h6><figure class="hljs highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">highlight:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">hljs:</span> <span class="hljs-literal">true</span> <span class="hljs-comment"># 添加这一行！</span><br>  <span class="hljs-attr">line_number:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">auto_detect:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">tab_replace:</span><br></code></pre></td></tr></table></figure><h6 id="复制-ARIA-配置：把-config-yml-example-复制为-config-yml："><a href="#复制-ARIA-配置：把-config-yml-example-复制为-config-yml：" class="headerlink" title="复制 ARIA 配置：把 _config.yml.example 复制为 _config.yml："></a>复制 ARIA 配置：把 <code>_config.yml.example</code> 复制为 <code>_config.yml</code>：</h6><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">cp themes/aria/_config.yml.example themes/aria/_config.yml<br></code></pre></td></tr></table></figure><h5 id="修改主题配置，下面的配置需要修改-ARIA-目录下的-主题的-config-yml，不需要修改所有的配置项，只要修改你需要的部分就可以了："><a href="#修改主题配置，下面的配置需要修改-ARIA-目录下的-主题的-config-yml，不需要修改所有的配置项，只要修改你需要的部分就可以了：" class="headerlink" title="修改主题配置，下面的配置需要修改 ARIA 目录下的 主题的 _config.yml，不需要修改所有的配置项，只要修改你需要的部分就可以了："></a>修改主题配置，下面的配置需要修改 ARIA 目录下的 <strong>主题的</strong> <code>_config.yml</code>，不需要修改所有的配置项，只要修改你需要的部分就可以了：</h5><h6 id="菜单设置"><a href="#菜单设置" class="headerlink" title="菜单设置"></a>菜单设置</h6><p>如果你想要启用“分类”和“标签”页面，取消注释 <code>categories</code> 和 <code>tags</code>，然后运行 <code>hexo new page categories</code> 和 <code>hexo new page tags</code> 生成这两个页面，最后分别把 <code>layout: categories</code> 和 <code>layout: tags</code> 添加到对应文件的文件头里。如果你想要启用“关于”页面，运行 <code>hexo new page about</code> 并取消注释即可：</p><figure class="hljs highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">menu:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">home</span><br>    <span class="hljs-attr">link:</span> <span class="hljs-string">/</span><br>    <span class="hljs-attr">icon:</span> <span class="hljs-string">&lt;i</span> <span class="hljs-string">class="fas</span> <span class="hljs-string">fa-home"&gt;&lt;/i&gt;</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">archives</span><br>    <span class="hljs-attr">link:</span> <span class="hljs-string">archives/</span><br>    <span class="hljs-attr">icon:</span> <span class="hljs-string">&lt;i</span> <span class="hljs-string">class="fas</span> <span class="hljs-string">fa-archive"&gt;&lt;/i&gt;</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">categories</span><br>    <span class="hljs-attr">link:</span> <span class="hljs-string">categories/</span><br>    <span class="hljs-attr">icon:</span> <span class="hljs-string">&lt;i</span> <span class="hljs-string">class="fas</span> <span class="hljs-string">fa-th-list"&gt;&lt;/i&gt;</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">tags</span><br>    <span class="hljs-attr">link:</span> <span class="hljs-string">tags/</span><br>    <span class="hljs-attr">icon:</span> <span class="hljs-string">&lt;i</span> <span class="hljs-string">class="fas</span> <span class="hljs-string">fa-tags"&gt;&lt;/i&gt;</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">about</span><br>    <span class="hljs-attr">link:</span> <span class="hljs-string">about/</span><br>    <span class="hljs-attr">icon:</span> <span class="hljs-string">&lt;i</span> <span class="hljs-string">class="fas</span> <span class="hljs-string">fa-user-edit"&gt;&lt;/i&gt;</span><br></code></pre></td></tr></table></figure><h6 id="生成Favicon"><a href="#生成Favicon" class="headerlink" title="生成Favicon"></a>生成<code>Favicon</code></h6><p>首先准备好一张图片作为你想要的 favicon 的原图，然后访问 <a href="https://realfavicongenerator.net/" target="_blank" rel="noopener">https://realfavicongenerator.net/</a> 生成各种不同浏览器的 favicon，然后下载压缩包，解压到你站点目录下 <code>source/favicons</code> 目录里（没有则创建一个）。ARIA 会自动加载这些图标。</p><h6 id="网站关键词"><a href="#网站关键词" class="headerlink" title="网站关键词"></a>网站关键词</h6><p>将 <code>keywords</code> 项设置为关键词列表。</p><h6 id="CreativeCommons-许可证"><a href="#CreativeCommons-许可证" class="headerlink" title="CreativeCommons 许可证"></a>CreativeCommons 许可证</h6><p>设置 <code>creative_commons</code> 项。为了保证美观，ARIA 会将链接显示在网站底部。可选的许可证有 <code>by</code>、<code>by-sa</code>、<code>by-nd</code>、<code>by-nc</code>、<code>by-nc-sa</code>、<code>by-nc-nd</code>，有关它们的区别参见 <a href="https://creativecommons.org/licenses/" target="_blank" rel="noopener">https://creativecommons.org/licenses/</a>。</p><h6 id="代码高亮主题"><a href="#代码高亮主题" class="headerlink" title="代码高亮主题"></a>代码高亮主题</h6><p>ARIA 内置了四种常见代码高亮主题，设置 <code>highlight</code> 项为 <code>atom-one-dark</code>、<code>atom-one-light</code>、<code>solarized-dark</code>、<code>solarized-light</code> 中的一个。ARIA 使用了 Hexo 内置的 highlight.js，因此如果你想添加更多的高亮主题，直接访问 <a href="https://github.com/isagalaev/highlight.js/tree/master/src/styles" target="_blank" rel="noopener">highlight.js 的样式仓库</a>，下载你需要的 CSS 文件到你站点的 <code>source/css/</code> 目录（也即在你存放 Markdown 文件的 <code>source/</code> 目录下面创建一个 <code>css/</code> 目录，你也可以把它放到主题的 <code>source/css/</code> 目录，但是这样会污染 git 工作区），然后设置这里的值为你下载的文件名（<strong>不要</strong> 添加<code>.css</code> 后缀，这个是自动添加的）。</p><h6 id="自定义信息"><a href="#自定义信息" class="headerlink" title="自定义信息"></a>自定义信息</h6><p><code>custom_info</code> 项的值会显示在网站底部，出于格式考虑请不要设置过长的字符串。</p><h6 id="头像"><a href="#头像" class="headerlink" title="头像"></a>头像</h6><p>设置 <code>avatar</code> 项为你头像的链接，例如设置 <code>avatar: images/myavatar.png</code>，则你需要把自己的头像放置到站点根目录下的 <code>source/images/myavatar.png</code>。</p><h6 id="自定义-Logo"><a href="#自定义-Logo" class="headerlink" title="自定义 Logo"></a>自定义 Logo</h6><p>设置方法类似于头像，<code>logo</code> 项的值将会被显示在默认顶部 <code>ARIA</code> 的位置，或者如果你想隐藏 logo，把这一项留空。</p><h6 id="自定义主题色"><a href="#自定义主题色" class="headerlink" title="自定义主题色"></a>自定义主题色</h6><p>主题色 <code>color</code> 会被用于页眉和页脚的背景上，一些浏览器也会使用它来辅助变色，例如 Android 版 Chrome 的标题栏颜色，默认为网站的深色。由于颜色以 <code>#</code> 开头，需要加双引号以防止被作为 YAML 的注释。如果你没有特殊需求，最好不要修改这里的颜色。</p><h6 id="Google-页面验证"><a href="#Google-页面验证" class="headerlink" title="Google 页面验证"></a>Google 页面验证</h6><p>如果想把你的网站提交给 Google，需要证明你是此网站的所有者，当 Google 要求你验证时，选择“使用 <meta> 元标签”，复制 <code>content</code> 属性的值，填写到 <code>google_verification</code> 项，然后重新生成发布网站。</p><blockquote><p>Tim_Paik留：如果还需要添加其他标签可以到<code>\themes\aria\layout\_layout.njk</code>中修改</p></blockquote><h6 id="网站创建年份"><a href="#网站创建年份" class="headerlink" title="网站创建年份"></a>网站创建年份</h6><p>将 <code>since</code> 值设为你网站的创建年份，如果留空或者填写年份与当前年份一致，网站底部只会显示当前年份，否则显示 <code>创建年份 - 当前年份</code>。</p><h6 id="搜索设置"><a href="#搜索设置" class="headerlink" title="搜索设置"></a>搜索设置</h6><p>如果需要启用搜索，首先确保第一步中安装了 <code>hexo-generator-search</code>，并且按照第二步配置过了，然后将 <code>search</code> 设置为 <code>true</code>，搜索框会显示在侧边栏的上部。</p><h6 id="侧边栏设置"><a href="#侧边栏设置" class="headerlink" title="侧边栏设置"></a>侧边栏设置</h6><p>有 <code>left</code>、<code>right</code> 和 <code>false</code> 三种选择，设置为 <code>false</code> 则不会显示侧边栏。</p><h6 id="动画"><a href="#动画" class="headerlink" title="动画"></a>动画</h6><p>将 <code>animate</code> 设置为 <code>true</code> 则会启用卡片的翻转动画效果（不建议启用，在某些浏览器和较低配置电脑上可能会导致卡顿）。</p><h6 id="不蒜子计数"><a href="#不蒜子计数" class="headerlink" title="不蒜子计数"></a>不蒜子计数</h6><p>如果需要关闭不蒜子计数，将 <code>busuanzi</code> 设置为 <code>false</code>，否则在页面底部会显示 <code>站点访问次数</code>、<code>站点访问人数</code>、<code>页面访问次数</code>。</p><blockquote><p>推荐关闭，因为这会使完全加载网站变慢</p></blockquote><h6 id="MathJax-设置"><a href="#MathJax-设置" class="headerlink" title="MathJax 设置"></a>MathJax 设置</h6><p><a href="https://www.mathjax.org/" target="_blank" rel="noopener">MathJax</a> 是一套用于在网页上显示数学公式和符号的 JavaScript 排版库，由于其体积较大，ARIA 没有内置，如果你有数学写作需要，首先设置 <code>mathjax</code> 下的 <code>enable</code> 为 <code>true</code>，然后将 <code>cdn</code> 项设置为你要使用的 MathJax CDN，然后在需要使用的页面添加文件头 <code>mathjax: true</code>。设置 <code>global</code> 为 <code>true</code> 可以在全部页面启用 MathJax，但可能会拖慢非数学页面的显示速度。</p><h6 id="常用库-CDN"><a href="#常用库-CDN" class="headerlink" title="常用库 CDN"></a>常用库 CDN</h6><p>可以对 ARIA 内置的库使用 CDN 加速，首先将 <code>lib_cdn</code> 下的 <code>enable</code> 设置为 <code>true</code>，然后将 CDN 地址添加到配置中即可，如果你不了解自己在做什么，请直接跳过这部份。</p><h6 id="社交链接"><a href="#社交链接" class="headerlink" title="社交链接"></a>社交链接</h6><p>先将 <code>social</code> 下面 <code>enable</code> 设置为 <code>true</code>，然后在 <code>links</code> 下添加你的个人社交链接，格式如下：</p><figure class="hljs highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">social:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">links:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">显示名称</span><br>      <span class="hljs-attr">link:</span> <span class="hljs-string">网页地址</span><br>      <span class="hljs-attr">icon:</span> <span class="hljs-string">你所使用的</span> <span class="hljs-string">Font</span> <span class="hljs-string">Awesome</span> <span class="hljs-string">图标的</span> <span class="hljs-string">HTML</span> <span class="hljs-string">标签</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">显示名称</span><br>      <span class="hljs-attr">link:</span> <span class="hljs-string">网页地址</span><br>      <span class="hljs-attr">icon:</span> <span class="hljs-string">你所使用的</span> <span class="hljs-string">Font</span> <span class="hljs-string">Awesome</span> <span class="hljs-string">图标的</span> <span class="hljs-string">HTML</span> <span class="hljs-string">标签</span><br></code></pre></td></tr></table></figure><p>前往 <a href="https://fontawesome.com/" target="_blank" rel="noopener">Font Awesome</a> 获取你想要的图标。</p><h6 id="友情链接"><a href="#友情链接" class="headerlink" title="友情链接"></a>友情链接</h6><p>先将 <code>blogroll</code> 下面的 <code>enable</code> 设置为 <code>true</code>，然后在 <code>links</code> 下添加友情链接，格式如下：</p><figure class="hljs highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">blogroll:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">links:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">显示名称</span><br>      <span class="hljs-attr">link:</span> <span class="hljs-string">网页地址</span><br>      <span class="hljs-attr">icon:</span> <span class="hljs-string">你所使用的</span> <span class="hljs-string">Font</span> <span class="hljs-string">Awesome</span> <span class="hljs-string">图标的</span> <span class="hljs-string">HTML</span> <span class="hljs-string">标签</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">显示名称</span><br>      <span class="hljs-attr">link:</span> <span class="hljs-string">网页地址</span><br>      <span class="hljs-attr">icon:</span> <span class="hljs-string">你所使用的</span> <span class="hljs-string">Font</span> <span class="hljs-string">Awesome</span> <span class="hljs-string">图标的</span> <span class="hljs-string">HTML</span> <span class="hljs-string">标签</span><br></code></pre></td></tr></table></figure><p>前往 <a href="https://fontawesome.com/" target="_blank" rel="noopener">Font Awesome</a> 获取你想要的图标。</p><h6 id="评论系统"><a href="#评论系统" class="headerlink" title="评论系统"></a>评论系统</h6><p>首先将 <code>comment</code> 下 <code>enable</code> 设成 <code>true</code> 以全局启用评论（首页、归档、分类、标签页面除外），然后填入你的 Disqus Shortname。如果你有哪个页面想单独关闭评论，添加文件头 <code>comment: false</code> （<code>comment</code> 不是 <code>comments</code>！）。</p><p>如果你使用 commentjs，首先将它的 <code>enable</code> 设置成 <code>true</code>，然后根据你的网站页面存放位置设置 <code>type</code>，支持 <code>github</code> 和 <code>oschina</code>，<code>user</code> 是你在这些网站的用户名，<code>repo</code> 是你这个仓库的名字，<code>client_id</code> 和 <code>client_secret</code> 需要你去 <a href="https://github.com/settings/applications/new" target="_blank" rel="noopener">github</a> 或者 <a href="https://git.oschina.net/oauth/applications/new" target="_blank" rel="noopener">oschina</a> 生成一个应用，然后复制 Token。</p><p>如果你使用 Valine，首先设置 <code>api_id</code> 与 <code>api_key</code>，并将 <code>enable</code> 设置为 <code>true</code>，其它配置项参照 Valine 文档设置。</p><p>如果启用多个评论系统，默认只会显示顺序靠前的（顺序：Disqus，commentjs，Valine）。</p><p>Tips：如果想批量更改新生成的文件的文件头，编辑站点目录下 <code>scaffolds</code> 目录里的文件，Hexo 会把这个目录内的文件作为生成新文件时的模板。</p><h6 id="打赏"><a href="#打赏" class="headerlink" title="打赏"></a>打赏</h6><p>将 <code>reward</code> 下 <code>enable</code> 设置为 <code>true</code> 启用打赏，然后在 <code>comment</code> 项设置你的打赏提示语，然后按需设置三种打赏方式的二维码（微信支付，支付宝，比特币），设置方式同头像，如果想关闭某一项留空即可。</p><h6 id="自动截断摘要"><a href="#自动截断摘要" class="headerlink" title="自动截断摘要"></a>自动截断摘要</h6><p>如果你想自动生成首页的文章摘要，你可以使用这个选项。例如设置 <code>auto_excerpt: 200</code> 就会让主题截取文章的前 200 个字符（不含 HTML 标签）作为摘要。但是如果你想要更好的显示效果，建议你 <strong>在想要的地方放置一个 <code>&lt;!--more--&gt;</code> 标签，在这个标签之前的文章内容会被作为文章的摘要</strong>。</p><h6 id="自定义字体"><a href="#自定义字体" class="headerlink" title="自定义字体"></a>自定义字体</h6><p>首先将 <code>custom_font</code> 下面的 <code>enable</code> 为 <code>true</code>，然后去提供网页字体服务的网站比如 <a href="https://fonts.google.com/" target="_blank" rel="noopener">Google Fonts</a>（如果你不能访问，找个替代品），然后选择所有你需要的字体，把生成的 <code>&lt;link&gt;</code> 标签里面的 <code>href</code> 属性网址复制出来粘贴到 <code>link</code> 选项下面。然后给不同的部分设置不同的字体。</p><p>示例如下：</p><figure class="hljs highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">custom_font:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">link:</span> <span class="hljs-string">//fonts.googleapis.com/css?family=Lato|Roboto+Condensed|Skranji|Ubuntu|Ubuntu+Mono</span><br>  <span class="hljs-attr">all:</span> <span class="hljs-string">Ubuntu</span> <span class="hljs-comment"># &lt;body&gt; 的字体。</span><br>  <span class="hljs-attr">title:</span> <span class="hljs-string">Roboto</span> <span class="hljs-string">Condensed</span> <span class="hljs-comment"># 标题字体。</span><br>  <span class="hljs-attr">subtitle:</span> <span class="hljs-string">Roboto</span> <span class="hljs-string">Condensed</span> <span class="hljs-comment"># 副标题字体。</span><br>  <span class="hljs-attr">main:</span> <span class="hljs-string">Ubuntu</span> <span class="hljs-comment"># 主要部份字体（菜单以下页脚以上）。</span><br>  <span class="hljs-attr">code:</span> <span class="hljs-string">Ubuntu</span> <span class="hljs-string">Mono</span> <span class="hljs-comment"># 代码字体。</span><br></code></pre></td></tr></table></figure><h6 id="内置写作样式"><a href="#内置写作样式" class="headerlink" title="内置写作样式"></a>内置写作样式</h6><p>Markdown 会被编译成 HTML，所以你可以直接在有效的 Markdown 文件里面写 HTML 代码。为了能更好地组织文章结构，主题内置了一些自定义样式类，可以在写作时使用。</p><h6 id="居中引用"><a href="#居中引用" class="headerlink" title="居中引用"></a>居中引用</h6><p>只要给你的 HTML 代码添加 <code>.centerquote</code> 这个类，你就能得到一个有上下边框的居中引用。推荐给 <code>&lt;blockquote&gt;&lt;/blockquote&gt;</code> 标签使用这个类：</p><figure class="hljs highlight HTML"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs HTML"><span class="hljs-tag">&lt;<span class="hljs-name">blockquote</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"centerquote"</span>&gt;</span>居中引用样例<span class="hljs-tag">&lt;/<span class="hljs-name">blockquote</span>&gt;</span><br></code></pre></td></tr></table></figure><h6 id="彩色警告块"><a href="#彩色警告块" class="headerlink" title="彩色警告块"></a>彩色警告块</h6><p>只要给你的 HTML 代码添加 <code>.alert-red</code>, <code>.alert-green</code> 或 <code>.alert-blue</code>：</p><figure class="hljs highlight HTML"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs HTML"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"alert-red"</span>&gt;</span>红色警告块样例<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"alert-green"</span>&gt;</span>绿色警告块样例<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"alert-blue"</span>&gt;</span>蓝色警告块样例<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><h5 id="自定义-CSS-和-JavaScript"><a href="#自定义-CSS-和-JavaScript" class="headerlink" title="自定义 CSS 和 JavaScript"></a>自定义 CSS 和 JavaScript</h5><p>如果你需要用自定义的 CSS 覆盖 ARIA 内置的 CSS 样式，可以编辑 <code>themes/aria/source/css/custom.styl</code>，这个文件会被最后加载。</p><p>如果你需要使用自定义的 JavaScript，可以编辑 <code>themes/aria/source/js/custom.js</code>，这个文件会被最后加载。</p><h5 id="更新主题"><a href="#更新主题" class="headerlink" title="更新主题"></a>更新主题</h5><p>如果你使用了自定义的 CSS 或 JavaScript，更新之前请先用 Git 把它们提交。只有工作区干净的时候才能进行拉取</p><p>然后使用 <code>git pull</code> 拉取最新的更新，如果有冲突请手动合并提交。</p><p>每次更新完了不要忘记对比 <code>_config.yml</code> 和 <code>_config.yml.example</code>，并手动将 example 中的更改应用到你自己的配置中。</p><hr><p>转载完毕！</p><hr><p>未完待续</p><h4 id="留言"><a href="#留言" class="headerlink" title="留言"></a>留言</h4><p>还有什么问题可以直接在评论区提！我会尽量回复的！<br>这里是Tim_Paik，如果有什么好想法或者求助可以找这个邮箱：timpaik#163.com（把#换成@）<br>转载请注明作者en</p>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 博客 </tag>
            
            <tag> Blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用HEXO搭建你自己的博客！（上）</title>
      <link href="/2020/03/11/%E7%94%A8HEXO%E6%90%AD%E5%BB%BA%E4%BD%A0%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%EF%BC%81%EF%BC%88%E4%B8%8A%EF%BC%89/"/>
      <url>/2020/03/11/%E7%94%A8HEXO%E6%90%AD%E5%BB%BA%E4%BD%A0%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%EF%BC%81%EF%BC%88%E4%B8%8A%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>前几天我搭建了我的博客！<br>现在我把搭建的过程记下来（顺便存个档防止健忘症en）<br>本文是使用Windows 10 LTSC作为平台搭建的，但Hexo完全跨平台，大部分命令通用（有些命令要加<code>sudo</code>哦）<br>PS:本项目无任何预算！全部是免费的XD</p><a id="more"></a><h4 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h4><p><a href="/2020/03/11/用HEXO搭建你自己的博客！（上）/">用HEXO搭建你自己的博客！（上）</a><br><a href="/2020/03/11/用HEXO搭建你自己的博客！（中）/">用HEXO搭建你自己的博客！（中）</a><br><a href="/2020/03/11/用HEXO搭建你自己的博客！（下）/">用HEXO搭建你自己的博客！（下）</a></p><h4 id="注意！"><a href="#注意！" class="headerlink" title="注意！"></a>注意！</h4><p>本文需要一定的学习能力，需要大量使用命令行及配置文件，请确保你智商在线——</p><h4 id="安装Git并注册Git账号"><a href="#安装Git并注册Git账号" class="headerlink" title="安装Git并注册Git账号"></a>安装<code>Git</code>并注册<code>Git</code>账号</h4><h5 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h5><h6 id="Windows平台：打开这里！"><a href="#Windows平台：打开这里！" class="headerlink" title="Windows平台：打开这里！"></a>Windows平台：打开<a href="https://git-scm.com/download/win" target="_blank" rel="noopener">这里！</a></h6><p>下载完exe之后打开，然后就不用我说了吧，下一步下一步！</p><h6 id="Linux：别跟我说你都用上Linux还不会安装Git！"><a href="#Linux：别跟我说你都用上Linux还不会安装Git！" class="headerlink" title="Linux：别跟我说你都用上Linux还不会安装Git！"></a>Linux：别跟我说你都用上Linux还不会安装Git！</h6><p>有些发行版上预装了’Git’，你可以试着输入<code>git</code>,如果有反应就可以跳过这一步了<br>Debian/Ubuntu:<code># apt-get install git</code><br>Fedora21及以前版本:<code># yum install git</code><br>Fedora22及以后版本:<code># dnf install git</code><br>Gentoo:<code># emerge --ask --verbose dev-vcs/git</code><br>Arch Linux(manjaro):<code># pacman -S git</code><br>openSUSE:<code># zypper install git</code><br>其他的可以到<a href="https://git-scm.com/download/linux" target="_blank" rel="noopener">官网</a>去看——（都用这么小众的发行版了大概也会装<code>Git</code>了吧）</p><h6 id="Mac-OS-X：没有Mac的我转载了dalao的步骤——"><a href="#Mac-OS-X：没有Mac的我转载了dalao的步骤——" class="headerlink" title="Mac OS X：没有Mac的我转载了dalao的步骤——"></a>Mac OS X：没有Mac的我转载了dalao的步骤——</h6><blockquote><p>从AppStore安装Xcode，Xcode集成了Git，不过默认没有安装，你需要运行Xcode，选择菜单“Xcode”-&gt;“Preferences”，在弹出窗口中找到“Downloads”，选择“Command Line Tools”，点“Install”就可以完成安装了。</p></blockquote><h5 id="注册Git账号并创建库"><a href="#注册Git账号并创建库" class="headerlink" title="注册Git账号并创建库"></a>注册<code>Git</code>账号并创建库</h5><p>这里选用<code>Github</code>进行演示（当然你用<code>Gitee</code>也差不多，<code>Coding</code>没用过xd）</p><h6 id="首先进入注册页面注册"><a href="#首先进入注册页面注册" class="headerlink" title="首先进入注册页面注册"></a>首先进入<a href="https://github.com/join?source=header" target="_blank" rel="noopener">注册页面</a>注册</h6><p>注册很简单，不会可以<a href="https://www.baidu.com/s?ie=UTF-8&wd=%E6%B3%A8%E5%86%8Cgithub" target="_blank" rel="noopener">看这里</a></p><h6 id="新建一个仓库"><a href="#新建一个仓库" class="headerlink" title="新建一个仓库"></a>新建一个仓库</h6><p>打开<code>Github</code>(或者<code>Gitee</code>)，点击右上角加号，选择<code>New repository</code>(新建仓库)<br>仓库名称就是你的用户名，然后直接拉到最底下创建！<br>记住你的仓库地址，后面要用</p><h4 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装<code>Node.js</code></h4><p>前端必备的软件！</p><h5 id="Windows：依旧是下载后无脑下一步——"><a href="#Windows：依旧是下载后无脑下一步——" class="headerlink" title="Windows：依旧是下载后无脑下一步——"></a>Windows：依旧是下载后无脑下一步——</h5><p>下载链接：<a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">https://nodejs.org/en/download/</a><br>国内加速镜像：<a href="http://nodejs.cn/download/" target="_blank" rel="noopener">http://nodejs.cn/download/</a></p><h5 id="Linux：同Git一样也可以从源里安装，也可以使用下面的方式"><a href="#Linux：同Git一样也可以从源里安装，也可以使用下面的方式" class="headerlink" title="Linux：同Git一样也可以从源里安装，也可以使用下面的方式"></a>Linux：同Git一样也可以从源里安装，也可以使用下面的方式</h5><p>终端执行：</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># wget https://nodejs.org/dist/v10.9.0/node-v10.9.0-linux-x64.tar.xz    // 下载</span><br><span class="hljs-comment"># tar xf  node-v10.9.0-linux-x64.tar.xz       // 解压</span><br><span class="hljs-comment"># cd node-v10.9.0-linux-x64/                  // 进入解压目录</span><br><span class="hljs-comment"># ./bin/node -v                               // 执行node命令 查看版本</span><br></code></pre></td></tr></table></figure><h5 id="Mac-OS-X"><a href="#Mac-OS-X" class="headerlink" title="Mac OS X"></a>Mac OS X</h5><p>终端执行：</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">brew install node<br></code></pre></td></tr></table></figure><h4 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装<code>Hexo</code></h4><p>Hexo基于Nodejs，更多信息可以google，是目前写静态博客的很好的选择<br>本文使用的是主题ARIA，当然你也可以找一个自己喜欢的主题！<a href="https://hexo.io/themes/" target="_blank" rel="noopener">前往选择！</a><br>以下默认你是在root或管理员模式安装的，至于目录随便找一个就好了——<br>注意：将[username].github.io中的[username]替换为你的用户名（Gitee用户还要将github.io替换为gitee.io）</p><h5 id="全局安装hexo"><a href="#全局安装hexo" class="headerlink" title="全局安装hexo"></a>全局安装hexo</h5><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install hexo-cli -g<br></code></pre></td></tr></table></figure><h5 id="创建博客！-以及必要修改"><a href="#创建博客！-以及必要修改" class="headerlink" title="创建博客！( 以及必要修改)"></a>创建博客！( 以及必要修改)</h5><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo init [username].github.io<br><span class="hljs-built_in">cd</span> [username].github.io<br>npm install --save hexo-renderer-njucks hexo-renderer-stylus hexo-generator-search hexo-generator-feed<br></code></pre></td></tr></table></figure><hr><p>未完待续</p><h4 id="留言"><a href="#留言" class="headerlink" title="留言"></a>留言</h4><p>还有什么问题可以直接在评论区提！我会尽量回复的！<br>这里是Tim_Paik，如果有什么好想法或者求助可以找这个邮箱：timpaik#163.com（把#换成@）<br>转载请注明作者en</p>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 博客 </tag>
            
            <tag> Blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于AVGPlus</title>
      <link href="/2020/03/03/%E5%85%B3%E4%BA%8EAVGPlus/"/>
      <url>/2020/03/03/%E5%85%B3%E4%BA%8EAVGPlus/</url>
      
        <content type="html"><![CDATA[<h5 id="AVGPlus是什么"><a href="#AVGPlus是什么" class="headerlink" title="AVGPlus是什么"></a>AVGPlus是什么</h5><hr><blockquote><p> AVGPlus 是一个跨平台、灵活、门槛低的文字游戏制作引擎，<strong>可以把游戏发布到</strong> <strong>Windows、Mac 桌面平台下，同时还可以发布到 Web 浏览器, Android 以及 iOS 下</strong>。可以胜几乎任意类型的 Galgame, 包括有声小说、解谜游戏等。引擎拥有超多开放的游戏API，游戏作者可以很轻易从0到1开发文字冒险游戏，甚至可以基于更高级的插件机制开发定制化的游戏特性。<br>AVGPlus 可以做什么：</p><ul><li>带有开放性结局的恋爱游戏</li><li>背包&amp;道具、收集功能的冒险解谜游戏</li><li>在游戏里实现和游戏角色聊天的功能</li><li>在某个“场景”偶遇女主的功能</li><li>……</li></ul></blockquote><a id="more"></a><p>转自AVGPlus作者<a href="https://www.zhihu.com/people/AngryPowman" target="_blank" rel="noopener">@愤怒的泡面</a>的知乎</p><hr><h4 id="以下是我写的AVGPlus体验版部署教程！"><a href="#以下是我写的AVGPlus体验版部署教程！" class="headerlink" title="以下是我写的AVGPlus体验版部署教程！"></a><strong>以下是我写的AVGPlus体验版部署教程！</strong></h4><hr><p>本文基于windows10专业版64位及以上版本——</p><p>ps：虽然是小白向，但还是要懂点电脑知识的（比如<br>部署avgplus最麻烦的地方其实并不是搭建服务器而是<strong>跨域</strong><br>所以本次教程选用了跨域最简单的node.js法<br>命令提示符：即cmd.exe<br><strong>一、安装node.js</strong><br>（已经安装过的可以跳过此步）<br>首先进入nodejs官网下载<br>下载链接<br><a href="https://nodejs.org/dist/v12.14.0/node-v12.14.0-x64.msi" target="_blank" rel="noopener">https://nodejs.org/dist/v12.14.0/node-v12.14.0-x64.msi</a><br>下载后双击安装node.js<br>同意条款<img src="https://bbs.avg-engine.com/assets/uploads/files/1578194342409-b2075b6e-237e-4ffe-a0df-ce65049cfc6b-image.png" alt="b2075b6e-237e-4ffe-a0df-ce65049cfc6b-image.png"><br>然后无脑下一步next就行<br>安装完成后，在Windows环境下，请打开命令提示符，然后输入°node -v°(请在命令提示符下输入)，如果安装正常，你应该看到版本输出:<img src="https://bbs.avg-engine.com/assets/uploads/files/1578194886577-ede33f78-84cc-465d-9352-11d7cfcdb18b-image.png" alt="ede33f78-84cc-465d-9352-11d7cfcdb18b-image.png"><br><strong>二、安装http-server</strong><br>之前泡面dalao使用的是yarn安装，有兴趣的可以研究一下yarn，但这里就直接用node.js自带的npm了（安装完成后完全一样，只不过yarn需要安装yarn）<br>打开命令提示符，输入</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install http-server -g<br></code></pre></td></tr></table></figure><p>出现</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">+ http-server@0.12.0<br></code></pre></td></tr></table></figure><p>即为安装完成<br><strong>三、开启服务器</strong><br>1、首先下载你从<a href="https://bbs.avg-engine.com/topic/6/avgplus-engine-%E4%BD%93%E9%AA%8C%E7%89%88%E5%8F%91%E5%B8%83" target="_blank" rel="noopener">泡面dalao那里</a>得到的引擎<br>这里贴出地址：<br>AVGPlus 引擎下载：<a href="https://bbs.avg-engine.com/assets/uploads/files/1577896566124-avgplus-browser-alpha-0.1.zip" target="_blank" rel="noopener">avgplus-browser-alpha-0.1.zip</a><br>范例游戏工程下载：<a href="https://bbs.avg-engine.com/assets/uploads/files/1577898452773-example-game-project.zip" target="_blank" rel="noopener">example-game-project.zip</a><br>下载后解压（解压！）到你准备的工程文件夹，例如我这里将引擎（avgplus-browser-alpha-0.1.zip）解压到了F:\avgplus，将工程（example-game-project.zip）解压到了F:\avgprogects<br>2、依旧是打开命令提示符（这里需要打开两个）<br>首先说引擎的部署<br>cd命令进入引擎所在的目录（我这里因为不同盘符所以添了一步</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">C:\Windows\system32&gt;F:<br>F:\&gt;<span class="hljs-built_in">cd</span> avgplus\browser<br>F:\avgplus\browser&gt;<br></code></pre></td></tr></table></figure><p>然后输入</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">http-server -p 2333 --cors -c-1 ./<br></code></pre></td></tr></table></figure><p>回车如果出现<img src="https://bbs.avg-engine.com/assets/uploads/files/1578195954732-245e82bc-8af4-4d50-a163-66fb68e7bdd0-image.png" alt="245e82bc-8af4-4d50-a163-66fb68e7bdd0-image.png"><br>即为成功（<strong>此时不要关闭命令提示符！！！！</strong>）<br>部署资源目录：<br><strong>再</strong>打开一个命令提示符窗口，cd命令进入资源所在的目录</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">C:\Windows\system32&gt;F:<br>F:\&gt;<span class="hljs-built_in">cd</span> avgprogects\example-game-project<br>F:\avgprogects\example-game-project&gt;<br></code></pre></td></tr></table></figure><p>然后输入</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">http-server -p 2336 --cors -c-1 ./<br></code></pre></td></tr></table></figure><p>回车<img src="https://bbs.avg-engine.com/assets/uploads/files/1578196199835-593ce964-5910-4205-83ab-d6403eee4729-image.png" alt="593ce964-5910-4205-83ab-d6403eee4729-image.png"> 即为成功（<strong>此时不要关闭命令提示符！！！！</strong>）<br><strong>四、测试</strong><br>打开浏览器，访问以下地址：<br><a href="127.0.0.1:2333">127.0.0.1:2333</a><br>或者<a href="localhost:2333">localhost:2333</a><br>如果看到显示文本 欢迎使用 AVGPlus! 说明游戏已经成功运行!<br>五、Q&amp;A<br>Q:为什么在开启服务器成功后不能关闭命令提示符？<br>A:因为node.js 的服务器是挂在命令提示符下的，如图<img src="https://bbs.avg-engine.com/assets/uploads/files/1578196822924-907dc35d-c243-4868-9d95-93a94baa0803-image.png" alt="907dc35d-c243-4868-9d95-93a94baa0803-image.png"><br>如果你想要让http-server在后台运行的话<br>可以写一个vbs脚本来实现（引擎）：</p><figure class="hljs highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs vbscript"><span class="hljs-keyword">Set</span> ws = <span class="hljs-built_in">CreateObject</span>(<span class="hljs-string">"Wscript.Shell"</span>)<br><span class="hljs-keyword">Sub</span> Print(text,timeout,title)<br>    <span class="hljs-keyword">Dim</span> WshShell<br>    <span class="hljs-keyword">Set</span> WshShell = <span class="hljs-built_in">CreateObject</span>(<span class="hljs-string">"WScript.Shell"</span>)<br>    WshShell.Popup text,timeout,title<br>    <span class="hljs-keyword">Set</span> WshShell = <span class="hljs-literal">nothing</span><br><span class="hljs-keyword">End</span> <span class="hljs-keyword">Sub</span><br>Print <span class="hljs-string">"正在启动http-server..."</span>,<span class="hljs-number">1</span>,<span class="hljs-string">"Avgplus"</span><br>ws.run <span class="hljs-string">"cmd /c http-server -p 2333 --cors -c-1 ./"</span>,<span class="hljs-number">0</span>,ture<br>WScript.Quit<br></code></pre></td></tr></table></figure><p>新建个文本文件，然后将以上内容复制进去，保存为°<strong>ANSI编码</strong>°(否则会乱码)（记事本默认），将整个文本文件（包括后缀名）改名成<strong>start.vbe</strong><br>将你刚刚写我start.vbe丢到引擎所在的目录（\browser）然后双击运行就行了，此时在任务管理器中它是一个独立的进程<img src="https://bbs.avg-engine.com/assets/uploads/files/1578197234530-260071fd-61c6-4108-8380-c788dcec3222-image.png" alt="260071fd-61c6-4108-8380-c788dcec3222-image.png"><br>如果想关闭服务器直接结束这个进程就行了<br>以上是后台运行<strong>引擎</strong>的http-server的方法，资源目录的话基本相同，将脚本中的</p><figure class="hljs highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vbscript">ws.run <span class="hljs-string">"cmd /c http-server -p 2333 --cors -c-1 ./"</span>,<span class="hljs-number">0</span>,ture<br></code></pre></td></tr></table></figure><p>改成</p><figure class="hljs highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vbscript">ws.run <span class="hljs-string">"cmd /c http-server -p 2336 --cors -c-1 ./"</span>,<span class="hljs-number">0</span>,ture<br></code></pre></td></tr></table></figure><p>就行(注意：双击start.vbe时是在当前目录打开服务器，所以运行资源目录的http-server时要将start.vbe复制一份并按上面修改，并且要资源目录和引擎的服务器同时开启才能进入游戏)<br><strong>至于为什么要用.vbe这种vbs脚本的变种，是因为.vbe写的脚本会报毒的几率非常小，而且可以后台运行，不需要在前台显示黑洞洞的命令提示符（狗头）</strong></p><p>、、<br>然后来说说我掉入的坑吧<br>我一开始是用的python的http.server来部署的<br>但由于搞了半天不成功不得已求助泡面dalao发现是跨域问题、、<br>网上搜了一堆没看懂（我：石锤真小白）<br>转而在engine.json中直接设置了本地目录，发现也不成功<br>吃完饭清了浏览器缓存（感谢大佬提醒）重试node.js法才成功、<br>然后我就转而研究怎么关闭这个逼死强迫症的命令提示符窗口耗费了好久<br>最后还是要等泡面dalao的一键部署包啊</p><p><strong>写在最后：</strong><br>原创，搬运请联系<a href="mailto:timpaik@163.com">timpaik@163.com</a><br>感谢泡面dalao，有财力的可以去赞助一下：<a href="https://afdian.net/@avgplus" target="_blank" rel="noopener">https://afdian.net/@avgplus</a><br>根据自己经历写的，大佬勿喷）</p><p>相关网站：</p><blockquote><p>官网：<a href="https://avg-engine.com/" target="_blank" rel="noopener">https://avg-engine.com/</a></p><p>BBS社区：<a href="https://bbs.avg-engine.com/" target="_blank" rel="noopener">https://bbs.avg-engine.com/</a></p><p>使用文档：<a href="http://docs.avg-engine.com/" target="_blank" rel="noopener">http://docs.avg-engine.com/</a></p><p>演示demo：<a href="http://demo.avg-engine.com/" target="_blank" rel="noopener">http://demo.avg-engine.com/</a><br>（第一次加载可能会慢）</p><p>在线编辑器试用：<a href="https://play.avg-engine.com/" target="_blank" rel="noopener">https://play.avg-engine.com/</a></p></blockquote><p>Ps：AVGPlus的全图形界面化已经开始制作了！届时即使没有任何经验都可以制作你自己的游戏！<del>（当然你得有钱）</del></p><p>本文同步发表于<a href="[https://bbs.avg-engine.com/topic/18/%E5%B0%8F%E7%99%BD%E5%90%91avgplus%E9%83%A8%E7%BD%B2%E6%95%99%E7%A8%8B-%E9%99%84%E5%8A%A0%E6%88%91%E6%8E%89%E5%85%A5%E7%9A%84%E4%B8%80%E5%A0%86%E5%9D%91](https://bbs.avg-engine.com/topic/18/小白向avgplus部署教程-附加我掉入的一堆坑)">AVGPlus官方论坛</a>，作者都是我）</p><p>End.</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>第一篇博客？</title>
      <link href="/2020/03/02/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%EF%BC%9F/"/>
      <url>/2020/03/02/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[<p>大概花了一天半的时间，我搭建完成了我的博客！</p><p>虽然就是照搬模板，然而还是有一些成就感（？）</p><p>使用的是HEXO的模板，主题选了AIRA（不得不说，这么好看的主题用的人好少啊，帮助文档也好少）</p><p>还有为什么 fontawesome 没有 bilibili 的图标）</p>]]></content>
      
      
      
        <tags>
            
            <tag> 人生第一次 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title></title>
      <link href="/404.html"/>
      <url>/404.html</url>
      
        <content type="html"><![CDATA[<!DOCTYPE html><html> <head>   <meta charset="UTF-8" />   <meta name="viewport" content="width=device-width, initial-scale=1" />   <meta name="robots" content="none" />   <title>404 Not Found</title>   <style>  *{font-family:"Microsoft Yahei";margin:0;font-weight:lighter;text-decoration:none;text-align:center;line-height:2.2em;}  html,body{height:100%;}  h1{font-size:100px;line-height:1em;}  table{width:100%;height:100%;border:0;}  </style>  <meta name="generator" content="Hexo 4.2.0"><link rel="alternate" href="/atom.xml" title="Tim_Paik'Blog" type="application/atom+xml"></head>  <body>   <table cellspacing="0" cellpadding="0">    <tbody>    <tr>      <td>       <table cellspacing="0" cellpadding="0">        <tbody>        <tr>          <td> <h1>404</h1> <h3>大事不妙啦！</h3> <p>你想访问的页面好像不小心被Tim_Paik给弄丢了qwq<br /> <a href="/">回到主页 &gt;</a> </p> </td>         </tr>        </tbody>      </table> </td>     </tr>    </tbody>  </table>    </body></html>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>about</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[<h2 id="关于我"><a href="#关于我" class="headerlink" title="关于我"></a>关于我</h2><p>留坑代填——</p><hr><p>好吧不皮了QAQ</p><h5 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h5><p>男，生日 2005-02-23 ，现居住在华北的一个五线小城市里</p><p>身高 1.78m ，体重 53 kg，对于自己不喜欢的东西不大认真<del>所以各种方面都比较咸鱼</del>。</p><p>于是！我养成了摸鱼的好习惯，然后学到了一大堆 “奇怪” 的知识——</p><p>比如：什么Linux啦，自建博客啦，<del>Git之类的，现在好像能写一个小小的程序了</del></p><p>当然由于摸鱼，都不是很精通，充其量就是知道而已<del>（买电脑不会被骗的那种）</del></p><hr><h5 id="爱好"><a href="#爱好" class="headerlink" title="爱好"></a>爱好</h5><p>别人推荐的我基本都会试试看的！</p><p>目前比较喜欢的是计算机之类的<del>（有人还问我会不会成为程序猿，我：我不知道啊）</del>，二次元什么的也有涉猎——</p><p>总之！有什么好点子就往我这里塞就对了！</p><p>我的邮箱：<a href="mailto:timpaik@163.com">timpaik@163.com</a></p><p>那么，就这样！<del>当然还可能未完待续</del></p><p>（Ps：这个博客我还不大会用，有人能教教我吗）</p><hr>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>categories</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>tags</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
